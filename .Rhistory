rawdata<- read.csv("activity.csv")
summary(rawdata)
str(rawdata)
rawdata<- read.csv("activity.csv", StringsAsFactors = FALSE)
rawdata<- read.csv("activity.csv", stringsAsFactors = FALSE)
str(rawdata)
datetime<- as.POSIXct(rawdata$date)
format(datetime)
datetime<- as.POSIXct(rawdata$date, format = "%Y-%m-%d")
rawdata$date<- datetime
str(rawdata)
library(dplyr)
rawdata %>% group_by(date) %>% mean(steps, na.rm = TRUE)
rawdata$steps
rawdata %>% group_by(date) %>% summarise_each(steps, funs = mean)
rawdata %>% group_by(date) %>% summarise_each(steps, funs(mean(.,na.rm = TRUE)))
View(rawdata)
rawdata %>% group_by(date) %>% summarise_each(funs(mean(steps,na.rm = TRUE)))
rawdata %>% group_by(date) %>% summarise(funs(mean(steps,na.rm = TRUE)))
?summarise
rawdata %>% group_by(date) %>% summarise(mean(steps,na.rm = TRUE)))
rawdata %>% group_by(date) %>% summarise(mean(steps,na.rm = TRUE))
rawdata %>% group_by(date) %>% summarise(sum(steps,na.rm = TRUE))
rawdata %>% group_by(date) %>% summarise(mean(sum(steps,na.rm = TRUE),na.rm = TRUE))
rawdata %>% group_by(date) %>% summarise(sum(steps,na.rm = TRUE))
sumz<- rawdata %>% group_by(date) %>% summarise(sum(steps,na.rm = TRUE))
mean(sumz[,2], na.rm = TRUE)
str(sumz)
class(sumz[,2])
View(sumz)
class(sumz)
sums<- data.frame(sumz)
class(sums)
class(cums[,2])
class(sums[,2])
sums<- data.frame(rawdata %>% group_by(date) %>% summarise(sum(steps,na.rm = TRUE)))
class(sums[,2])
mean(sums[,2])
mean(sums[,2], na.rm - TRUE)
mean(sums[,2], na.rm = TRUE)
hist(sums)
hist(sums[1,],sums[,2])
hist(x = sums[,2])
print(sums, type = "html")
avginterval<- data.frame(rawdata %>% group_by(interval) %>% summarise(mean(steps,na.rm = TRUE)))
head(avginterval)
plot(x = avginterval[1,], y = avginterval[,2],xlab = "5-minute interval",ylab = "average number of steps taken, averaged across all days",type = "l")
str(avginterval)
plot(x = avginterval$interval, y = avginterval$mean.steps..na.rm...TRUE.,xlab = "5-minute interval",ylab = "average number of steps taken, averaged across all days",type = "l")
summary(avginterval)
avginterval<- data.frame(rawdata %>% group_by(interval) %>% summarise(mean(steps,na.rm = TRUE)))
plot(x = avginterval$interval, y = avginterval$mean.steps..na.rm...TRUE.,xlab = "5-minute interval",ylab = "average number of steps taken, averaged across all days",type = "l")
avginterval<- data.frame(rawdata %>% group_by(interval) %>% summarise(mean(steps,na.rm = TRUE)))
plot(x = avginterval$interval, y = avginterval$mean.steps..na.rm...TRUE.,xlab = "5-minute interval",ylab = "average number of steps taken, averaged across all days",type = "l")
max(avginterval$mean.steps..na.rm...TRUE.)
which(max(avginterval$mean.steps..na.rm...TRUE.))
which.max(avginterval[,2])
avginterval[which.max(avginterval[,2]),]
avginterval$interval[which.max(avginterval[,2])]
sum(complete.cases(rawdata))
sum(!complete.cases(rawdata))
?zoo
library(zoo)
?zoo
head(avginterval)
library(dplyr)
?mutate
?rbind
?merge
imputeData<- merge(rawdata,avginterval, by = interval)
imputeData<- merge(rawdata,avginterval, by.x = interval, by.y = interval)
imputeData<- merge(rawdata,avginterval, by = "interval")
View(imputeData)
imputeData$steps[is.na]
imputeData$steps[is.na()]
is.na(imputeData$steps)
imputeData[is.na(imputeData$steps)]
imputeData[is.na(imputeData$steps),]
imputeData[is.na(imputeData$steps),]<-imputeData$mean.steps..na.rm...TRUE.
imputeData[is.na(imputeData$steps),2]<-imputeData$mean.steps..na.rm...TRUE.
imputeData[is.na(imputeData$steps),2]
imputeData[is.na(imputeData$steps),2]<-imputeData[4,2]
View(imputeData)
imputeData<- merge(rawdata,avginterval, by = "interval")
imputeData[is.na(imputeData$steps),2]<-imputeData[,4]
imputeData[is.na(imputeData$steps),2]<-imputeData[is.na(imputeData$steps),4]
View(imputeData)
?arrange
sorted<- arrange(rawdata, interval)
View(sorted)
sorted<- arrange(imputeData, date, interval)
View(sorted)
sorted<- imputeData %>% arrange(date, interval) %>% transmute(mean.steps..na.rm...TRUE.)
View(sorted)
?transmute
sorted<- imputeData %>% arrange(date, interval)
View(sorted)
sorted$mean.steps..na.rm...TRUE.<- NULL
View(sorted)
hist(sorted$steps)
hist(rawdata$steps)
sums2<- data.frame(rawdata %>% group_by(date) %>% summarise(sum(steps,na.rm = TRUE)))
hist(x = sums2[,2], xlab = "total number of steps taken each day", main =  "histogram after adding means for NAs")
mean(sums2[,2])
median(sums2[,2])
?weekday
?weekdays
weekdays(.leap.seconds)
?factor
factor(c("weekday","weekend"))
week<-factor(c("weekday","weekend"))
sorted %>% mutate(day = week)
?ifelse
sorted %>% mutate(day = weekdays(date))
weekday<- sorted %>% mutate(day = weekdays(date))
weekday<- weekday %>% mutate(weekday = ifelse(weekday != "Saturday" && weekday !="Sunday",yes = "weekday", no = "weekend"))
weekday<- weekday %>% mutate(dayType = ifelse(weekday != "Saturday" && weekday !="Sunday",yes = "weekday", no = "weekend"))
str(weekday)
weekday<- weekday %>% mutate(day = ifelse(day != "Saturday" && day !="Sunday",yes = "weekday", no = "weekend"))
head(weekday)
weekday<- sorted %>% mutate(day = weekdays(date))
weekday2<- weekday %>% mutate(day = ifelse(day != "Saturday" && day !="Sunday",yes = "weekday", no = "weekend"))
View(weekday)
View(weekday2)
unique(weekday2$day)
weekday<- sorted %>% mutate(day = weekdays(date))
weekday2<- weekday %>% mutate(day = ifelse(day == "Saturday" || day =="Sunday",yes = "weekend", no = "weekday"))
unique(weekday2$day)
ifelse(day == "Saturday" || day =="Sunday",yes = "weekend", no = "weekday")
ifelse(weekday$day == "Saturday" || day =="Sunday",yes = "weekend", no = "weekday")
ifelse(weekday$day == "Saturday" || day =="Sunday",yes = "weekend", no = "weekday")
ifelse(weekday$day == "Saturday" || weekday$day =="Sunday",yes = "weekend", no = "weekday")
ifelse(weekday$day == "Saturday" | weekday$day =="Sunday",yes = "weekend", no = "weekday")
weekday<- sorted %>% mutate(day = weekdays(date))
weekday2<- weekday %>% mutate(day = ifelse(day == "Saturday" | day =="Sunday",yes = "weekend", no = "weekday"))
head(weekday2)
tail(weekday2)
head(weekday)
tail(weekday)
weekday[3000:3010,]
weekday[3010:3020,]
weekday[3010:3030,]
weekday[3010:3040,]
weekday[3090:3100,]
weekday[3190:3200,]
weekday[3200:3220,]
weekday[32300:3250,]
weekday[3230:3250,]
weekday[3260:3280,]
weekday[3300:3320,]
weekday[3320:3350,]
weekday[3360:3370,]
weekday[3360:3400,]
weekday[3400:3430,]
weekday[3470:3500,]
weekday2[3470:3500,]
plot(weekday$steps ~ weekday$interval | weekday$steps)
plot(weekday$steps ~ weekday$interval | weekday$day)
plot(weekday$steps ~ weekday$interval)
plot(weekday$steps ~ weekday$interval, type = "l")
plot(weekday$steps ~ weekday$interval|weekday$day, type = "l")
par(mfcol=c(2,1))
plot(weekday$steps ~ weekday$interval|weekday$day, type = "l")
plot(weekday$steps ~ weekday$interval=="weekday", type = "l")
plot(weekday$steps ~ weekday$interval=="weekend", type = "l")
with(subset(weekday, day == "weekday"), plot(interval,steps))
with(subset(weekday, day == "weekday"), plot(interval,steps, type = "l"))
plot(interval,steps, type = "l")
plot(weekday$interval,weekday$steps, type = "l")
plot1<- subset(weekday, day == "weekday")
plot2<- subset(weekday, day != "weekday")
plot1
plot2
weekday<- sorted %>% mutate(day = weekdays(date))
weekday<- weekday %>% mutate(day = ifelse(day == "Saturday" | day =="Sunday",yes = "weekend", no = "weekday"))
with(subset(weekday, day == "weekday"), plot(interval,steps, type = "l"))
with(subset(weekday, day == "weekend"), plot(interval,steps))
with(subset(weekday, day == "weekend"), plot(interval,steps), type = "l")
with(subset(weekday, day == "weekday"), plot(interval,steps, type = "l"))
with(subset(weekday, day == "weekend"), plot(interval,steps, type = "l"))
?xyplot
avginterval2<- data.frame(weekday %>% group_by(interval) %>% summarise(mean(steps)))
View(avginterval)
avginterval2<- data.frame(weekday %>% group_by(interval, day) %>% summarise(mean(steps)))
View(avginterval2)
xyplot(avginterval2$steps ~ avginterval2$interval|day, type = "l'")
library(lattice)
xyplot(avginterval2$steps ~ avginterval2$interval|day, type = "l'")
xyplot(avginterval2$steps ~ avginterval2$interval|avginterval2$day, type = "l'")
par(mfcol=c(2,1))
xyplot(avginterval2$steps ~ avginterval2$interval|avginterval2$day, type = "l'")
xyplot(avginterval2$steps ~ avginterval2$interval, type = "l'")
xyplot(avginterval2$steps ~ avginterval2$interval, type = "l")
plot(avginterval2$steps ~ avginterval2$interval, type = "l")
with(subset(avginterval2, day = "weekday"), interval,steps)
with(subset(avginterval2, day = "weekday"), plot(interval,steps,type = "l"))
with(subset(avginterval2, day = "weekday"), plot(interval,mean.steps.,type = "l"))
with(subset(avginterval2, day = "weekend"), plot(interval,mean.steps.,type = "l"))
xyplot(avginterval2$mean.steps. ~ avginterval2$interval, type = "l")
xyplot(avginterval2$mean.steps. ~ avginterval2$interval|avginterval2$day, type = "l")
xyplot(mean.steps. ~ interval|day, data = avginterval2, type = "l", layout = c(2,1))
xyplot(mean.steps. ~ interval|day, data = avginterval2, type = "l", layout = c(2,1), xlab = "interval", ylab = "number of steps")
xyplot(mean.steps. ~ interval|day, data = avginterval2, type = "l", layout = c(1,2), xlab = "interval", ylab = "number of steps")
